<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mall.spring.project.ShopMapper">
	<!-- namespace : 주로 dao 클래스의 sqlSession과 연결하기 위한 키로 사용 -->
	<!-- DB 쿼리 작성 -->
	<!-- id : sqlSession의 함수와 연결하기 위해 사용 -->

	<!-- 컬럼이름 : mybatis-config.xml의 name ${컬럼이름} : mybatis-config.xml의 property의 
		name과 매칭. DB 테이블의 열 ${컬럼이름} : dao 클래스의 sqlSession에서 전송받은 데이터(입력받은 데이터) -->

	<select id="select_search" resultType="ProductVO">
		<!-- public List<ProductVO> select(String productName, String CategoryCode) -->
	select b.* from(	
		select rownum rn, a.* from(
			select * from ${product}
			where ${productName} like
			#{productName}
			and ${categoryCode} = 
			<choose>
				<!-- 전체 검색 -->
				<when test="categoryCode=='all'">
					${categoryCode}
				</when>
				<!-- 전체 검색이 아닌 나머지 -->
				<otherwise>
					#{categoryCode}
				</otherwise>
			</choose>
		)a
	)b where rn between #{start} and #{end}
		<choose>
			<!-- 높은 평점순 -->
			<when test="sort=='review_rating'">
				order by ${reviewRating} desc
			</when>		
			
			<!-- 낮은 가격순 -->
			<when test="sort=='product_price asc'">
				order by ${productPrice} asc
			</when>		
			
			<!-- 높은 가격순 -->
			<when test="sort=='product_price desc'">
				order by ${productPrice} desc
			</when>		
			
			<!-- 판매량순 -->
			<when test="sort=='sales_rate'">
				order by ${salesRate} desc 
			</when>	
		</choose>
	</select>
	
	<select id="select_count" resultType="int">
		select count(*) from ${product}
		where ${productName} like #{productName}
		and ${categoryCode} = 
		<choose>
			<!-- 전체 검색 -->
			<when test="categoryCode=='all'">
				${categoryCode}
			</when>
			<!-- 전체 검색이 아닌 나머지 -->
			<otherwise>
				#{categoryCode}
			</otherwise>
		</choose>
	</select>
	
	<select id="select_no" resultType="ProductVO">
		select * from ${product}
		where ${productNo} = #{productNo}
	</select>
</mapper>















